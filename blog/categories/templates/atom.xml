<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: templates | AprilTouch]]></title>
  <link href="http://climber2002.github.io/blog/categories/templates/atom.xml" rel="self"/>
  <link href="http://climber2002.github.io/"/>
  <updated>2015-03-01T21:41:06+10:30</updated>
  <id>http://climber2002.github.io/</id>
  <author>
    <name><![CDATA[Andy Wang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[integrate web template into rails 4 application]]></title>
    <link href="http://climber2002.github.io/blog/2015/02/26/integrate-web-template-into-rails-4-application/"/>
    <updated>2015-02-26T23:07:49+10:30</updated>
    <id>http://climber2002.github.io/blog/2015/02/26/integrate-web-template-into-rails-4-application</id>
    <content type="html"><![CDATA[<p>In these days there are many free or paid web templates, especially for bootstrap templates. Recently I integrated a Bootstrap template called <a href="https://wrapbootstrap.com/theme/loop-agency-and-personal-theme-WB053H4T4">Loop</a> which is bought on <a href="https://wrapbootstrap.com/">WrapBootstrap</a>. Here I will explain some practices and caveats about the integration.</p>

<h2>Location</h2>

<p><img class="left" src="/images/loop.png" width="300" height="300"></p>

<p>After extract the template zip file, we can see the organization is like the  structure on the left. This template actually contains two templates, one for personal and one for Agency, and what I want is for the Agency. We can see that it puts all resource files like javascripts, CSS files and fonts file in folder <em>assets</em>. I want to keep this structure, so it would be easier to upgrade if it releases new version. The best practice for put 3rd-party template is to put it in <strong>vendor/assets</strong>, so I create a folder <strong>loop</strong> under <strong>vendor/assets</strong> and and copy the <em>assets</em> folder to <strong>vendor/assets/loop</strong>, like the following figure,</p>

<p><img class="left" src="/images/loop_copied.png" width="300" height="300"></p>

<p>Notice that I changed the <em>assets</em> folder from the original template and named it <strong>loop</strong>, so when we reference the files under it from browser it will create paths like <em>/assets/loop/js/loop.js</em> because rails will append <em>assets</em> before the resource. This is to make the files in this template not collide with other assets.</p>

<h2>Create index file</h2>

<p>If you read my blog <a href="http://climber2002.github.io/blog/2014/08/17/using-index-files-in-rails-4-assets-pipeline/">Using Index Files in Rails 4 Assets Pipeline</a> before, you should know that the index files should be named <strong>loop.css.scss</strong> and <strong>loop.js</strong>, under foler <strong>vendor/assets/loop</strong>.</p>

<p>They have the following contents,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>vendor/assets/loop/loop.css.scss </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;/&lt;</span><span class="nt">em</span><span class="o">&gt;</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="nt">em</span><span class="o">&gt;=</span> <span class="nt">require</span> <span class="nt">loop</span><span class="o">/</span><span class="nt">css</span><span class="o">/</span><span class="nt">bootstrap</span>
</span><span class='line'> <span class="o">&lt;</span><span class="nt">em</span><span class="o">&gt;=</span> <span class="nt">require</span> <span class="nt">loop</span><span class="o">/</span><span class="nt">css</span><span class="o">/</span><span class="nt">font-awesome</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="nt">em</span><span class="o">&gt;=</span> <span class="nt">require</span> <span class="nt">loop</span><span class="o">/</span><span class="nt">css</span><span class="o">/</span><span class="nt">main</span>
</span><span class='line'> <span class="o">*/&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>vendor/assets/loop/loop.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="c1">//= require loop/js/jquery-2.1.0</span>
</span><span class='line'><span class="c1">//= require loop/js/bootstrap.js</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/scrollto/jquery.scrollTo-1.4.3.1-min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/scrollto/jquery.localscroll-1.2.7-min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/easing/jquery.easing.min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/google-map/google-map</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/parallax/jquery.parallax-1.1.3</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/jpreloader/jpreloader.min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/isotope/imagesloaded.pkgd</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/isotope/isotope.pkgd.min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/wow/wow</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/flexslider/jquery.flexslider-min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/magnific/jquery.magnific-popup.min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/supersized/supersized.3.2.7.min</span>
</span><span class='line'><span class="c1">//= require loop/js/plugins/supersized/supersized.shutter.min</span>
</span><span class='line'><span class="c1">//= require loop/js/loop.js&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Basically the index files include all dependent css and javascripts, but pay atthention that their path should start with <em>loop</em> since we have put all assets in <strong>vendor/assets/loop/loop</strong> folder.</p>

<h2>Update CSS files</h2>

<p>In the template&rsquo;s CSS files, there are reference to images such as background image, like following code,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>main.css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">body</span><span class="nc">.fullscreen-image-background</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="sx">url(&amp;lsquo;../img/sliders/slider3.png?1393983498&amp;rsquo;)</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background</span><span class="o">-</span><span class="k">size</span><span class="o">:</span> <span class="n">cover</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-repeat</span><span class="o">:</span> <span class="k">no-repeat</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-position</span><span class="o">:</span> <span class="k">center</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Such url won&rsquo;t work because Rails will precompile those assets in <em>public/assets</em> folder, so we name this file to <em>main.css.scss</em>, and use <strong>image-url</strong> tag, like following,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>main.css </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span><span class="nt">body</span><span class="nc">.fullscreen-image-background</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">background-image</span><span class="o">:</span> <span class="n">image</span><span class="o">-</span><span class="sx">url(&amp;lsquo;loop/img/sliders/slider3.png&amp;rsquo;)</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background</span><span class="o">-</span><span class="k">size</span><span class="o">:</span> <span class="n">cover</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-repeat</span><span class="o">:</span> <span class="k">no-repeat</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-position</span><span class="o">:</span> <span class="k">center</span> <span class="k">center</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span><span class="o">&lt;/</span><span class="nt">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nt">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<h2>Update JS files</h2>

<p>Sometimes the JS files also reference image files, like following code in loop.js,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>loop.js </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">slides</span><span class="o">:</span>   <span class="p">[</span>       <span class="c1">// Slideshow Images&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;assets/img/sliders/slider1.png&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;HANDCRAFTED&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Built to provide great visitor experience&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">},</span>
</span><span class='line'>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;assets/img/sliders/slider2.png&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;PARALLAX&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrolling the page is fun with parallax background&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">},</span>
</span><span class='line'>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;assets/img/sliders/slider3.png&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;BUY ONE FOR TWO&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Buy one to get both of the agency and personal theme&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>For the same reason, after deploy production the JS files can&rsquo;t find the image files also, in such case we should depend on the asset pipeline and change the file to <strong>loop.js.erb</strong>, and use <strong>image_path</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>loop.js.erb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="err">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">slides</span><span class="o">:</span>   <span class="p">[</span>       <span class="c1">// Slideshow Images&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">pre</span><span class="o">&gt;&lt;</span><span class="nx">code</span><span class="o">&gt;</span>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;%= image_path &#39;</span><span class="nx">loop</span><span class="o">/</span><span class="nx">img</span><span class="o">/</span><span class="nx">sliders</span><span class="o">/</span><span class="nx">slider1</span><span class="p">.</span><span class="nx">png</span><span class="s1">&#39;%&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;HANDCRAFTED&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Built to provide great visitor experience&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">},</span>
</span><span class='line'>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;%= image_path &#39;</span><span class="nx">loop</span><span class="o">/</span><span class="nx">img</span><span class="o">/</span><span class="nx">sliders</span><span class="o">/</span><span class="nx">slider2</span><span class="p">.</span><span class="nx">png</span><span class="s1">&#39;%&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;PARALLAX&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Scrolling the page is fun with parallax background&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">},</span>
</span><span class='line'>          <span class="p">{</span><span class="nx">image</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;%= image_path &#39;</span><span class="nx">loop</span><span class="o">/</span><span class="nx">img</span><span class="o">/</span><span class="nx">sliders</span><span class="o">/</span><span class="nx">slider3</span><span class="p">.</span><span class="nx">png</span><span class="s1">&#39;%&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">title</span> <span class="o">:</span> <span class="s1">&#39;&amp;lt;div class=&quot;hero-text&quot;&amp;gt;&amp;lt;h2 class=&quot;hero-heading&quot;&amp;gt;BUY ONE FOR TWO&amp;lt;/h2&amp;gt;&amp;lt;p&amp;gt;Buy one to get both of the agency and personal theme&amp;lt;/p&amp;gt;&amp;lt;/div&amp;gt;&#39;</span><span class="p">,</span> <span class="nx">thumb</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">url</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">}</span>
</span><span class='line'>        <span class="p">]</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nx">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Also in our erb files, if we want to reference image files we should use <strong>image_path</strong>.</p>

<h2>Precompile configuration</h2>

<p>By default when we run <strong>rake assets:precompile</strong>, Rails won&rsquo;t precompile the assets in vendor. So we need to add the loop template into configuration, in <strong>application.rb</strong>, we update like following,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>application.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;config.assets.precompile += %w(loop.css loop.js loop/</span><span class="o">*</span><span class="p">)</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So it will precompile index files and all assets in <strong>vendor/assets/loop/loop</strong> folder.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Digging Rails: How Rails finds your templates Part 2]]></title>
    <link href="http://climber2002.github.io/blog/2015/02/22/digging-rails-how-rails-finds-your-templates-part-2/"/>
    <updated>2015-02-22T21:24:30+10:30</updated>
    <id>http://climber2002.github.io/blog/2015/02/22/digging-rails-how-rails-finds-your-templates-part-2</id>
    <content type="html"><![CDATA[<p>In <a href="http://climber2002.github.io/blog/2015/02/21/how-rails-finds-your-templates-part-1/">last part</a> we introduced that when Rails looks for a template, it firstly populate an options hash by calling <strong>_normalize_render</strong>. And then in the <em>render</em> method, it will call <strong>render_to_body</strong> and pass the options, like the following code,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Normalize arguments, options and then delegates render_to_body and</span>
</span><span class='line'><span class="sr"># sticks the result in self.response_body.</span>
</span><span class='line'><span class="sr"># :api: public</span>
</span><span class='line'><span class="sr">def render(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  options = _normalize_render(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  self.response_body = render_to_body(options)</span>
</span><span class='line'><span class="sr">  _process_format(rendered_format, options) if rendered_format</span>
</span><span class='line'><span class="sr">  self.response_body</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <strong>render_to_body</strong> will select the templated based on the values in options hash. If we check the source code of <strong>AbstractController::Rendering#render_to_body</strong>, it&rsquo;s nothing. Just as usual, it&rsquo;s overridden by other modules.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Performs the actual template rendering.</span>
</span><span class='line'><span class="sr"># :api: public</span>
</span><span class='line'><span class="sr">def render_to_body(options = {})</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Just as last part, we could run <em>ApplicationController.ancestors_that_implement_instance_method</em> to find what classes or modules implement that method, and we will find the following,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;2.0.0-p353 :008 &gt; ApplicationController.ancestors_that_implement_instance_method(:render_to_body)</span>
</span><span class='line'><span class="sr"> =&gt; [ActionController::Renderers, ActionController::Rendering, ActionView::Rendering, AbstractController::Rendering]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see three modules implement that method: <em>ActionController::Renderers</em>, <em>ActionController::Rendering</em>, and <em>ActionView::Rendering</em>. Let&rsquo;s look at each of them one by one.</p>

<h2>ActionController::Renderers#render_to_body</h2>

<p>For <em>ActionController::Renderers#render_to_body</em> method, it registers a set of renderers, and then if the options contains the renderer key, then it will call that renderer. If no renderer is found, it just call <em>super</em></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/action_controller/metal/renderers.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Renderers</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;def render_to_body(options)</span>
</span><span class='line'><span class="sr">  _render_to_body_with_renderer(options) || super</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def _render_to_body_with_renderer(options)</span>
</span><span class='line'><span class="sr">  _renderers.each do |name|</span>
</span><span class='line'><span class="sr">    if options.key?(name)</span>
</span><span class='line'><span class="sr">      _process_options(options)</span>
</span><span class='line'><span class="sr">      method_name = Renderers._render_with_renderer_method_name(name)</span>
</span><span class='line'><span class="sr">      return send(method_name, options.delete(name), options)</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">  nil</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>This is mainly for calling <strong>render</strong> and pass parameters like :json, :xml, like the following code,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class ArticlesController &amp;lt; ApplicationController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="nf">index</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;@articles = Articles.all</span>
</span><span class='line'><span class="sr">render json: @articles</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Since <em>:json</em> is a registered renderer in <em>ActionController::Renderers</em>, it will call that renderer. You can also register your own renderer by calling <strong>ActionController::Renderers.add</strong>.</p>

<h2>ActionController::Rendering#render_to_body</h2>

<p>If in <strong>ActionController::Renderers#render_to_body</strong>, it doesn&rsquo;t find a renderer, then it will call <em>super</em>, which is <strong>ActionController::Rendering#render_to_body</strong>. Let&rsquo;s look at what this module does in the method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/action_controller/metal/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;RENDER_FORMATS_IN_PRIORITY = [:body, :text, :plain, :html]</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def render_to_body(options = {})</span>
</span><span class='line'><span class="sr">  super || _render_in_priorities(options) || &#39; &#39;</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">private</span>
</span><span class='line'>
</span><span class='line'><span class="sr">def _render_in_priorities(options)</span>
</span><span class='line'><span class="sr">  RENDER_FORMATS_IN_PRIORITY.each do |format|</span>
</span><span class='line'><span class="sr">    return options[format] if options.key?(format)</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  nil</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Notice that this method calls <em>super</em> first, it only call <em>_render_in_priorities</em> if <em>super</em> returns nothing.</p>

<p>In <strong>_render_in_priorities</strong> it searches the RENDER_FORMATS_IN_PRIORITY one by one, and return the option value if it finds the format.</p>

<p>In this module when it calls <em>super</em>, it is calling <strong>ActionView::Rendering#render_to_body</strong> method. Let&rsquo;s have a look.</p>

<h2>ActionView::Rendering#render_to_body</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionview/lib/action_view/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;def render_to_body(options = {})</span>
</span><span class='line'><span class="sr">  _process_options(options)</span>
</span><span class='line'><span class="sr">  _render_template(options)</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr"># Returns an object that is able to render templates.</span>
</span><span class='line'><span class="sr"># :api: private</span>
</span><span class='line'><span class="sr">def view_renderer</span>
</span><span class='line'><span class="sr">  @_view_renderer ||= ActionView::Renderer.new(lookup_context)</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">private</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  # Find and render a template based on the options given.</span>
</span><span class='line'><span class="sr">  # :api: private</span>
</span><span class='line'><span class="sr">  def _render_template(options) #:nodoc:</span>
</span><span class='line'><span class="sr">    variant = options[:variant]</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    lookup_context.rendered_format = nil if options[:formats]</span>
</span><span class='line'><span class="sr">    lookup_context.variants = variant if variant</span>
</span><span class='line'>
</span><span class='line'><span class="sr">    view_renderer.render(view_context, options)</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>It turns out that here is the the meat we are looking for. The <strong>render_to_body</strong> calls <strong>_render_template</strong>, and for the <strong>_render_template</strong>, it calls **view_renderer.render(view_context, options).</p>

<p>The <em>view_renderer</em> is an instance of <strong>ActionView::Renderer</strong>, and when it&rsquo;s initialized, it&rsquo;s passing a <em>lookup_context</em> object, which is an instance of <strong>ActionView::LookupContext</strong>. The <strong>ActionView::LookupContext</strong> contains all information about looking for a template based on the options. So in next part we will check this class in detail, and check how <strong>LookupContext</strong>, <strong>ViewPaths</strong>, <strong>PathSet</strong> work together to find the template.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Digging Rails: How Rails finds your templates Part 1]]></title>
    <link href="http://climber2002.github.io/blog/2015/02/21/how-rails-finds-your-templates-part-1/"/>
    <updated>2015-02-21T20:35:52+10:30</updated>
    <id>http://climber2002.github.io/blog/2015/02/21/how-rails-finds-your-templates-part-1</id>
    <content type="html"><![CDATA[<p>Have you ever wondered for a Rails application, when you access an action in a controller, how Rails finds the template to render? For example, when the action <em>index</em> in <em>ArticlesController</em> is accessed, by default the template <em>app/views/articles/index.html.erb</em> will be selected and rendered. Recently I&rsquo;m digging the source code of Rails, and I invite you to walk through some source code in ActionPack and ActionView with me. And then I will show how the Rubygem <a href="https://github.com/bwillis/versioncake">versioncake</a> works by modifying the Rails configuration.</p>

<p>In this first part we firstly check how the <strong>render</strong> works. Notice that we check Rails 4.2 source code. If you look at another version, the implementation may be slightly different.</p>

<p>The entry point for the render is from the <strong>AbstractController::Rendering#render</strong> method. The <strong>AbstractController</strong> is a module shared by ActionController and ActionMailer. Since these two modules share a lot of functionalities, Rails extract those same functionalities into <strong>AbstractController</strong>. Let&rsquo;s have a look at this method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Normalize arguments, options and then delegates render_to_body and</span>
</span><span class='line'><span class="sr"># sticks the result in self.response_body.</span>
</span><span class='line'><span class="sr"># :api: public</span>
</span><span class='line'><span class="sr">def render(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  options = _normalize_render(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  self.response_body = render_to_body(options)</span>
</span><span class='line'><span class="sr">  _process_format(rendered_format, options) if rendered_format</span>
</span><span class='line'><span class="sr">  self.response_body</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In our controller, we could call <em>render</em> method directly. For example, we can call <em>render &lsquo;new&rsquo;</em> to render the <em>new.html.erb</em> template. Or if we don&rsquo;t call <em>render</em> explicitly, there is a module <strong>ActionController::ImplicitRender</strong> which will call a default render.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/action_controller/metal/implicit_renderer.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionController</span>
</span><span class='line'><span class="sr">  module ImplicitRender&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">send_action</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">ret</span> <span class="o">=</span> <span class="k">super</span>
</span><span class='line'>  <span class="n">default_render</span> <span class="k">unless</span> <span class="n">performed?</span>
</span><span class='line'>  <span class="n">ret</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">default_render</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'>  <span class="n">render</span><span class="p">(</span><span class="o">*</span><span class="n">args</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The send_action will be called when the action of a controller is triggered. It first calls super, then if in the action it doesn&rsquo;t render anything, the <em>performed?</em> will return false. So <em>default_render</em> is called. We can see that when call <em>default_render</em> it just calls <em>render</em> without any arguments.</p>

<p>In <strong>AbstractController::Rendering#render</strong> method, it firstly calls <em>_normalize_render</em> then calls <em>render_to_body</em>. The <em>_normalize_render</em> returns an options object which is a Hash. In this part we will examine the <strong>_normalize_render</strong> method to see how the options is generated.</p>

<p>Let&rsquo;s see how <strong>_normalize_render</strong> is implemented.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;private</span>
</span><span class='line'>
</span><span class='line'><span class="sr"># Normalize args and options.</span>
</span><span class='line'><span class="sr"># :api: private</span>
</span><span class='line'><span class="sr">def _normalize_render(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  options = _normalize_args(*args, &amp;amp;block)</span>
</span><span class='line'><span class="sr">  #TODO: remove defined? when we restore AP &amp;lt;=&amp;gt; AV dependency</span>
</span><span class='line'><span class="sr">  if defined?(request) &amp;amp;&amp;amp; request &amp;amp;&amp;amp; request.variant.present?</span>
</span><span class='line'><span class="sr">    options[:variant] = request.variant</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'><span class="sr">  _normalize_options(options)</span>
</span><span class='line'><span class="sr">  options</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We see that it calls <em>_normalize_args</em> and <em>_normalize_options</em> methods. The <em>_normalize_args</em> and <em>_normalize_options</em> have different purposes.</p>

<h3>_normalize_args</h3>

<p>The <strong>_normalize_args</strong> is to convert all args into an options hash. For example when we call <em>render</em> method, we could call like this,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">render</span> <span class="o">&amp;</span><span class="n">lsquo</span><span class="p">;</span><span class="kp">new</span><span class="o">&amp;</span><span class="n">rsquo</span><span class="p">;,</span> <span class="ss">status</span><span class="p">:</span> <span class="ss">:ok</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Here the first argument &lsquo;new&rsquo; is a String, and <strong>_normalize_args</strong> is responsible to put this first argument in options hash and give it an appropriate key.</p>

<p>Let&rsquo;s see how it&rsquo;s implemented.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Normalize args by converting render &quot;foo&quot; to render :action =&amp;gt; &quot;foo&quot; and</span>
</span><span class='line'><span class="sr"># render &quot;foo/</span><span class="n">bar</span><span class="s2">&quot; to render :file =&amp;gt; &quot;</span><span class="n">foo</span><span class="o">/</span><span class="n">bar</span><span class="s2">&quot;.</span>
</span><span class='line'><span class="s2"># :api: plugin</span>
</span><span class='line'><span class="s2">def _normalize_args(action=nil, options={})</span>
</span><span class='line'><span class="s2">  if action.is_a? Hash</span>
</span><span class='line'><span class="s2">    action</span>
</span><span class='line'><span class="s2">  else</span>
</span><span class='line'><span class="s2">    options</span>
</span><span class='line'><span class="s2">  end</span>
</span><span class='line'><span class="s2">end</span>
</span><span class='line'><span class="s2">&lt;/code&gt;&lt;/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;  end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;end&lt;/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="s2">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We see that this method by default almost does nothing, if the action is a Hash, it returns action, otherwise if action is for example, a string, it returns the second parameter which is the options hash.</p>

<p>Notice that ApplicationController includes some other modules which override this method, as we will see later.</p>

<h3>_normalize_options</h3>

<p>The <strong>_normalize_options</strong> method is for the modules to include other options. For a Rails application, the ApplicationController extends from <strong>ActionController::Base</strong>, and <strong>ActionController::Base</strong> includes a lot of modules, each module could override this method and add some other options.</p>

<p>Let&rsquo;s firstly check how this method is implemented in <strong>AbstractController::Rendering</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/abstract_controller/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module AbstractController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Normalize options.</span>
</span><span class='line'><span class="sr"># :api: plugin</span>
</span><span class='line'><span class="sr">def _normalize_options(options)</span>
</span><span class='line'><span class="sr">  options</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>By default this method does nothing. But it will be overridden in other modules.</p>

<h3>Override _normalize_args</h3>

<p>Rails source code is complex, one reason is because there are many modules could override other modules&rsquo;s methods. For example, in a ArticlesController, let&rsquo;s see its ancestors,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;$ rails c</span>
</span><span class='line'><span class="sr">Loading development environment (Rails 4.2.0)</span>
</span><span class='line'><span class="sr">2.0.0-p353 :001 &gt; puts ArticlesController.ancestors</span>
</span><span class='line'><span class="sr">ArticlesController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="ss">Module</span><span class="p">:</span><span class="mh">0x007f8f0a971800</span><span class="o">&gt;&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;ApplicationController&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="ss">Module</span><span class="p">:</span><span class="mh">0x007f8f0a8f93c8</span><span class="o">&gt;&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;&amp;lt;Module:0x007f8f05465118&gt;&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;&amp;</span><span class="n">lt</span><span class="p">;</span><span class="ss">Module</span><span class="p">:</span><span class="mh">0x007f8f05465140</span><span class="o">&gt;&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;ActionController::Base</span>
</span><span class='line'><span class="sr">WebConsole::ControllerHelpers</span>
</span><span class='line'><span class="sr">Turbolinks::XHRHeaders</span>
</span><span class='line'><span class="sr">Turbolinks::Cookies</span>
</span><span class='line'><span class="sr">Turbolinks::XDomainBlocker</span>
</span><span class='line'><span class="sr">Turbolinks::Redirection</span>
</span><span class='line'><span class="sr">ActiveRecord::Railties::ControllerRuntime</span>
</span><span class='line'><span class="sr">ActionDispatch::Routing::RouteSet::MountedHelpers</span>
</span><span class='line'><span class="sr">ActionController::ParamsWrapper</span>
</span><span class='line'><span class="sr">ActionController::Instrumentation</span>
</span><span class='line'><span class="sr">ActionController::Rescue</span>
</span><span class='line'><span class="sr">ActionController::HttpAuthentication::Token::ControllerMethods</span>
</span><span class='line'><span class="sr">ActionController::HttpAuthentication::Digest::ControllerMethods</span>
</span><span class='line'><span class="sr">ActionController::HttpAuthentication::Basic::ControllerMethods</span>
</span><span class='line'><span class="sr">ActionController::DataStreaming</span>
</span><span class='line'><span class="sr">ActionController::Streaming</span>
</span><span class='line'><span class="sr">ActionController::ForceSSL</span>
</span><span class='line'><span class="sr">ActionController::RequestForgeryProtection</span>
</span><span class='line'><span class="sr">ActionController::Flash</span>
</span><span class='line'><span class="sr">ActionController::Cookies</span>
</span><span class='line'><span class="sr">ActionController::StrongParameters</span>
</span><span class='line'><span class="sr">ActiveSupport::Rescuable</span>
</span><span class='line'><span class="sr">ActionController::ImplicitRender</span>
</span><span class='line'><span class="sr">ActionController::MimeResponds</span>
</span><span class='line'><span class="sr">ActionController::Caching</span>
</span><span class='line'><span class="sr">ActionController::Caching::Fragments</span>
</span><span class='line'><span class="sr">ActionController::Caching::ConfigMethods</span>
</span><span class='line'><span class="sr">AbstractController::Callbacks</span>
</span><span class='line'><span class="sr">ActiveSupport::Callbacks</span>
</span><span class='line'><span class="sr">ActionController::EtagWithTemplateDigest</span>
</span><span class='line'><span class="sr">ActionController::ConditionalGet</span>
</span><span class='line'><span class="sr">ActionController::Head</span>
</span><span class='line'><span class="sr">ActionController::Renderers::All</span>
</span><span class='line'><span class="sr">ActionController::Renderers</span>
</span><span class='line'><span class="sr">ActionController::Rendering</span>
</span><span class='line'><span class="sr">ActionView::Layouts</span>
</span><span class='line'><span class="sr">ActionView::Rendering</span>
</span><span class='line'><span class="sr">ActionController::Redirecting</span>
</span><span class='line'><span class="sr">ActionController::RackDelegation</span>
</span><span class='line'><span class="sr">ActiveSupport::Benchmarkable</span>
</span><span class='line'><span class="sr">AbstractController::Logger</span>
</span><span class='line'><span class="sr">ActionController::UrlFor</span>
</span><span class='line'><span class="sr">AbstractController::UrlFor</span>
</span><span class='line'><span class="sr">ActionDispatch::Routing::UrlFor</span>
</span><span class='line'><span class="sr">ActionDispatch::Routing::PolymorphicRoutes</span>
</span><span class='line'><span class="sr">ActionController::ModelNaming</span>
</span><span class='line'><span class="sr">ActionController::HideActions</span>
</span><span class='line'><span class="sr">ActionController::Helpers</span>
</span><span class='line'><span class="sr">AbstractController::Helpers</span>
</span><span class='line'><span class="sr">AbstractController::AssetPaths</span>
</span><span class='line'><span class="sr">AbstractController::Translation</span>
</span><span class='line'><span class="sr">AbstractController::Rendering</span>
</span><span class='line'><span class="sr">ActionView::ViewPaths</span>
</span><span class='line'><span class="sr">ActionController::Metal</span>
</span><span class='line'><span class="sr">AbstractController::Base</span>
</span><span class='line'><span class="sr">ActiveSupport::Configurable</span>
</span><span class='line'><span class="sr">Object</span>
</span><span class='line'><span class="sr">ActiveSupport::Dependencies::Loadable</span>
</span><span class='line'><span class="sr">PP::ObjectMixin</span>
</span><span class='line'><span class="sr">JSON::Ext::Generator::GeneratorMethods::Object</span>
</span><span class='line'><span class="sr">Kernel</span>
</span><span class='line'><span class="sr">BasicObject&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that for a typical controller, it has a lot of ancestors and most of them are modules. All modules after <em>AbstractController::Rendering</em> could override its methods. I have created a gist to check which ancestors implement a method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;class Module</span>
</span><span class='line'><span class="sr">  def ancestors_that_implement_instance_method(instance_method)&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nb">ancestors</span><span class="o">.</span><span class="n">find_all</span> <span class="k">do</span> <span class="o">|</span><span class="n">ancestor</span><span class="o">|</span>
</span><span class='line'>  <span class="p">(</span><span class="n">ancestor</span><span class="o">.</span><span class="n">instance_methods</span><span class="p">(</span><span class="kp">false</span><span class="p">)</span> <span class="o">+</span> <span class="n">ancestor</span><span class="o">.</span><span class="n">private_instance_methods</span><span class="p">(</span><span class="kp">false</span><span class="p">))</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="nb">instance_method</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Run the above code in a rails console, then you can call <em>ClassName.ancestors_that_implement_instance_method</em> to check what ancestors implement a method.</p>

<p>Let&rsquo;s first see what ancestors override the <em>_normalize_args</em> method,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;$ rails c</span>
</span><span class='line'><span class="sr">Loading development environment (Rails 4.2.0)</span>
</span><span class='line'><span class="sr">2.0.0-p353 :013 &gt;   ArticlesController.ancestors_that_implement_instance_method(:_normalize_args)</span>
</span><span class='line'><span class="sr"> =&gt; [ActionController::Rendering, ActionView::Rendering, AbstractController::Rendering]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Two modules override this instance method: <em>ActionView::Rendering</em> and <em>ActionController::Rendering</em>. Let&rsquo;s look them in order from top to down.</p>

<p>Let&rsquo;s look at <em>ActionView::Rendering</em> first,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>actionview/lib/action_view/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView</span>
</span><span class='line'><span class="sr">  module Rendering&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1"># Normalize args by converting render &quot;foo&quot; to render :action =&amp;gt; &quot;foo&quot; and</span>
</span><span class='line'><span class="c1"># render &quot;foo/bar&quot; to render :template =&amp;gt; &quot;foo/bar&quot;.</span>
</span><span class='line'><span class="c1"># :api: private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">_normalize_args</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{})</span>
</span><span class='line'>  <span class="n">options</span> <span class="o">=</span> <span class="k">super</span><span class="p">(</span><span class="n">action</span><span class="p">,</span> <span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="k">case</span> <span class="n">action</span>
</span><span class='line'>  <span class="k">when</span> <span class="no">NilClass</span>
</span><span class='line'>  <span class="k">when</span> <span class="no">Hash</span>
</span><span class='line'>    <span class="n">options</span> <span class="o">=</span> <span class="n">action</span>
</span><span class='line'>  <span class="k">when</span> <span class="nb">String</span><span class="p">,</span> <span class="no">Symbol</span>
</span><span class='line'>    <span class="n">action</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>    <span class="n">key</span> <span class="o">=</span> <span class="n">action</span><span class="o">.</span><span class="n">include?</span><span class="p">(</span><span class="sc">?/</span><span class="p">)</span> <span class="p">?</span> <span class="ss">:template</span> <span class="p">:</span> <span class="ss">:action</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="n">key</span><span class="o">]</span> <span class="o">=</span> <span class="n">action</span>
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:partial</span><span class="o">]</span> <span class="o">=</span> <span class="n">action</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">options</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that for the first argument <em>action</em>, if it&rsquo;s a string and the string include &lsquo;/&rsquo;, the key for this argument is :file, and if it doesn&rsquo;t include &lsquo;/&rsquo;, the key is :action.</p>

<p>So if we call <em>render &lsquo;new&rsquo;</em>, the options will be { action: &lsquo;new&rsquo; }, if we call <em>render &lsquo;articles/new&rsquo;</em>, the options will be { file: &lsquo;articles/new&rsquo; }</p>

<p>Now let&rsquo;s see how <em>ActionController::Rendering</em> overrides this method</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>actionpack/lib/action_controller/metal/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionController</span>
</span><span class='line'><span class="sr">  module Rendering&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1"># Normalize arguments by catching blocks and setting them on :update.</span>
</span><span class='line'><span class="k">def</span> <span class="nf">_normalize_args</span><span class="p">(</span><span class="n">action</span><span class="o">=</span><span class="kp">nil</span><span class="p">,</span> <span class="n">options</span><span class="o">=</span><span class="p">{},</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span><span class="n">blk</span><span class="p">)</span> <span class="c1">#:nodoc:</span>
</span><span class='line'>  <span class="n">options</span> <span class="o">=</span> <span class="k">super</span>
</span><span class='line'>  <span class="n">options</span><span class="o">[</span><span class="ss">:update</span><span class="o">]</span> <span class="o">=</span> <span class="n">blk</span> <span class="k">if</span> <span class="nb">block_given?</span>
</span><span class='line'>  <span class="n">options</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that for this override, if the method is passed a block, it will set the block to options[:update]</p>

<h3>Override _normalize_options</h3>

<p>Just like <em>_normalize_args</em>, let&rsquo;s examine what modules override <em>_normalize_options</em>. We can see following modules implement <em>_normalize_options</em>: <em>[ActionController::Rendering, ActionView::Layouts, ActionView::Rendering, AbstractController::Rendering]</em>.</p>

<p>Let&rsquo;s check <em>ActionView::Rendering</em> first,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>actionpack/lib/action_controller/metal/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView</span>
</span><span class='line'><span class="sr">  module Rendering&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="c1"># Normalize options.</span>
</span><span class='line'><span class="c1"># :api: private</span>
</span><span class='line'><span class="k">def</span> <span class="nf">_normalize_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="n">options</span> <span class="o">=</span> <span class="k">super</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">options</span><span class="o">[</span><span class="ss">:partial</span><span class="o">]</span> <span class="o">==</span> <span class="kp">true</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:partial</span><span class="o">]</span> <span class="o">=</span> <span class="n">action_name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">options</span><span class="o">.</span><span class="n">keys</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="o">[</span><span class="ss">:partial</span><span class="p">,</span> <span class="ss">:file</span><span class="p">,</span> <span class="ss">:template</span><span class="o">]</span><span class="p">)</span><span class="o">.</span><span class="n">empty?</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:prefixes</span><span class="o">]</span> <span class="o">||=</span> <span class="n">_prefixes</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">options</span><span class="o">[</span><span class="ss">:template</span><span class="o">]</span> <span class="o">||=</span> <span class="p">(</span><span class="n">options</span><span class="o">[</span><span class="ss">:action</span><span class="o">]</span> <span class="o">||</span> <span class="n">action_name</span><span class="p">)</span><span class="o">.</span><span class="n">to_s</span>
</span><span class='line'>  <span class="n">options</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that it addes three options by default,</p>

<ul>
<li>If the options[:partial] is true, then it will set options[:partial] to <em>action_name</em>, the <em>action_name</em> is just the name of the action that is triggered. For example, if the <em>index</em> action of ArticlesController is triggered, <em>action_name</em> will be <em>index</em>.</li>
<li>If the options doesn&rsquo;t include :partial, :file or :template, it set options[:prefixes]. Let&rsquo;s see what&rsquo;s set for this :prefixes in a minute.</li>
<li>It set the options[:template]. It&rsquo;s either passed from the arguments or just use the action_name.</li>
</ul>


<p>So what&rsquo;s in options[:prefixes], let&rsquo;s see how <em>_prefixes</em> method is implemented.</p>

<p>The <strong>AbstractController::Rendering</strong> module includes <strong>ActionView::ViewPaths</strong> module. And <strong>_prefixes</strong> method is implemented there.</p>

<p><strong>ActionView::ViewPaths</strong> is an important module which we will examine in more details in later parts. It&rsquo;s to manage the view paths for controllers. For example, by default Rails will append a view path <strong>#{Rails.root}app/views</strong> so the application knows to search templates in that specific view path.</p>

<p>For now let&rsquo;s just focus on <strong>_prefixes</strong> method.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionview/lib/action_view/view_paths.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">ViewPaths</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# The prefixes used in render &quot;foo&quot; shortcuts.</span>
</span><span class='line'><span class="sr">def _prefixes # :nodoc:</span>
</span><span class='line'><span class="sr">  self.class._prefixes</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The <strong>_prefixes</strong> just calls the class method <strong>_prefixes</strong>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionview/lib/action_view/view_paths.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">module</span> <span class="nn">ViewPaths</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;module ClassMethods</span>
</span><span class='line'><span class="sr">  def _prefixes # :nodoc:</span>
</span><span class='line'><span class="sr">    @_prefixes ||= begin</span>
</span><span class='line'><span class="sr">      return local_prefixes if superclass.abstract?</span>
</span><span class='line'>
</span><span class='line'><span class="sr">      local_prefixes + superclass._prefixes</span>
</span><span class='line'><span class="sr">    end</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  private</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  # Override this method in your controller if you want to change paths prefixes for finding views.</span>
</span><span class='line'><span class="sr">  # Prefixes defined here will still be added to parents&#39; &amp;lt;tt&amp;gt;._prefixes&amp;lt;/</span><span class="n">tt</span><span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">.</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">local_prefixes</span>
</span><span class='line'>    <span class="o">[</span><span class="n">controller_path</span><span class="o">]</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;end&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Notice that Rails 4.2 implements that method and handles some deprecated parent prefixes. In above code I omitted that handling for clarity.</p>

<p>This <strong>ActionView::ViewPaths._prefixes</strong> calls recursively. it append local_prefixes with superclass&rsquo;s _prefixes. The <strong>local_prefixes</strong> has just one element: <strong>controller_path</strong>.</p>

<p>The <strong>controller_path</strong> method is very simple, it&rsquo;s implemented in <strong>AbstractController::Base</strong>. For example, for a controller <em>ArticlesController</em>, its controller_path will be <em>articles</em>, and for a controller <em>Articles::CommentsController</em>, its controller_path will be <em>articles/comments</em></p>

<p>So the <strong>_prefixes</strong> method first gets it&rsquo;s parent prefixes, and then prepends the current controller_path to the front.</p>

<p>For example, if our application has a <em>ArticlesController</em>, in our rails controller, we can call the following code to show the <em>_prefixes</em>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;$ rails c</span>
</span><span class='line'><span class="sr">Loading development environment (Rails 4.2.0)</span>
</span><span class='line'><span class="sr">2.0.0-p353 :001 &gt; ArticlesController.new.send(:_prefixes)</span>
</span><span class='line'><span class="sr"> =&gt; [&amp;ldquo;articles&amp;rdquo;, &amp;ldquo;application&amp;rdquo;]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We see that the prefixes contains two elements: articles and application. It&rsquo;s because the ApplicationController extends from ActionController::Base, but ActionController::Base is abstract.</p>

<p>So now we can see that for <em>ArticlesController#index</em> action, when we just call <em>render</em> without any arguments, the options will contains following elements,</p>

<ul>
<li><strong>:prefixes</strong> : array [&ldquo;articles&rdquo;, &ldquo;application&rdquo;]</li>
<li><strong>:template</strong> : string &ldquo;index&rdquo;</li>
</ul>


<p>Now let&rsquo;s see next one, how <strong>ActionView::Layouts</strong> overrides <strong>_normalize_options</strong> method,</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionview/lib/action_view/layouts.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;module ActionView</span>
</span><span class='line'><span class="sr">  module Layouts&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">def</span> <span class="nf">_normalize_options</span><span class="p">(</span><span class="n">options</span><span class="p">)</span> <span class="c1"># :nodoc:</span>
</span><span class='line'>  <span class="k">super</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">if</span> <span class="n">_include_layout?</span><span class="p">(</span><span class="n">options</span><span class="p">)</span>
</span><span class='line'>    <span class="n">layout</span> <span class="o">=</span> <span class="n">options</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="ss">:layout</span><span class="p">)</span> <span class="p">{</span> <span class="ss">:default</span> <span class="p">}</span>
</span><span class='line'>    <span class="n">options</span><span class="o">[</span><span class="ss">:layout</span><span class="o">]</span> <span class="o">=</span> <span class="n">_layout_for_option</span><span class="p">(</span><span class="n">layout</span><span class="p">)</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="o">&lt;</span><span class="sr">/code&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>We can see that if the options[:layout] is not set, the default layout is :default. And then options[:layout] is set to the result returned by <em>_layout_for_option</em>.</p>

<p>If you are interested you could check how <strong>_layout_for_options</strong> is implemented. When this module searches for the layout it will search <em>&ldquo;app/views/layouts/#{class_name.underscore}.rb&rdquo;</em> first, if it doesn&rsquo;t found, then it will search super class. Since when a rails application is generated, an application.html.erb will be put in <em>app/views/layouts</em> and since by default all controllers' parent is ApplicationController, so by default this layout will be used.</p>

<p>Finally let&rsquo;s see how <strong>ActionController::Rendering</strong> overrides <strong>_normalize_options</strong></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>rails/actionpack/lib/action_controller/metal/rendering.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">ActionController</span>
</span><span class='line'>  <span class="k">module</span> <span class="nn">Rendering</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;pre&gt;&lt;code&gt;# Normalize both text and status options.</span>
</span><span class='line'><span class="sr">def _normalize_options(options) #:nodoc:</span>
</span><span class='line'><span class="sr">  _normalize_text(options)</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  if options[:html]</span>
</span><span class='line'><span class="sr">    options[:html] = ERB::Util.html_escape(options[:html])</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  if options.delete(:nothing)</span>
</span><span class='line'><span class="sr">    options[:body] = nil</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  if options[:status]</span>
</span><span class='line'><span class="sr">    options[:status] = Rack::Utils.status_code(options[:status])</span>
</span><span class='line'><span class="sr">  end</span>
</span><span class='line'>
</span><span class='line'><span class="sr">  super</span>
</span><span class='line'><span class="sr">end</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;</span><span class="sr">/pre&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;  end</span>
</span><span class='line'><span class="sr">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>So this method just process :html, :nothing and :status options, which is straight forward.</p>

<p>So finally let&rsquo;s see when we call <em>render</em> in <em>ArticlesController#index</em> without any arguments, the options will contains following values,</p>

<ul>
<li><strong>:prefixes</strong> : array [&ldquo;articles&rdquo;, &ldquo;application&rdquo;]</li>
<li><strong>:template</strong> : string &ldquo;index&rdquo;</li>
<li><strong>:layout</strong>   : A Proc when called will return &ldquo;app/views/layouts/application.html.erb&rdquo;</li>
</ul>


<p>Now we know how the options is normalized. And when Rails determines which template to render, it will extract details from the options. And we will look at how Rails determines template in later parts.</p>
]]></content>
  </entry>
  
</feed>
